<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ssm.shirodemo.permission.mapper.PermissionMapper" >
  <resultMap id="BaseResultMap" type="com.ssm.shirodemo.permission.model.Permission" >
    <id column="permission_id" property="permissionId" jdbcType="VARCHAR" />
    <result column="permission_name" property="permissionName" jdbcType="VARCHAR" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="icon" property="icon" jdbcType="VARCHAR" />
    <result column="parent_id" property="parentId" jdbcType="VARCHAR" />
    <result column="permission_type" property="permissionType" jdbcType="VARCHAR" />
    <result column="code" property="code" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    permission_id, permission_name, url, icon, parent_id,permission_type,code
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from sys_permission
    where permission_id = #{permissionId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from sys_permission
    where permission_id = #{permissionId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.ssm.shirodemo.permission.model.Permission" >
    insert into sys_permission (permission_id, permission_name, url, 
      icon, parent_id,permission_type)
    values (#{permissionId,jdbcType=VARCHAR}, #{permissionName,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, 
      #{icon,jdbcType=VARCHAR}, #{parentId,jdbcType=VARCHAR},#{permissionType,jdbcType=VARCHAR},#{code,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ssm.shirodemo.permission.model.Permission" >
    insert into sys_permission
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="permissionId != null" >
        permission_id,
      </if>
      <if test="permissionName != null" >
        permission_name,
      </if>
      <if test="url != null" >
        url,
      </if>
      <if test="icon != null" >
        icon,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="permissionId != null" >
        #{permissionId,jdbcType=VARCHAR},
      </if>
      <if test="permissionName != null" >
        #{permissionName,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="icon != null" >
        #{icon,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ssm.shirodemo.permission.model.Permission" >
    update sys_permission
    <set >
      <if test="permissionName != null" >
        permission_name = #{permissionName,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="icon != null" >
        icon = #{icon,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=VARCHAR},
      </if>
    </set>
    where permission_id = #{permissionId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ssm.shirodemo.permission.model.Permission" >
    update sys_permission
    set permission_name = #{permissionName,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      icon = #{icon,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=VARCHAR}
    where permission_id = #{permissionId,jdbcType=VARCHAR}
  </update>

  <!--根据角色，查询该角色所拥有的权限-->
  <select id="selectPermissionByRoleId" parameterType="java.lang.String" resultMap="BaseResultMap">
      select
    <include refid="Base_Column_List" />
    from sys_permission
    where permission_id in(
    select b.permission_id from sys_role a left join sys_role_permission b on a.role_id = b.role_id where a.role_id = #{roleId}
    )
  </select>
</mapper>